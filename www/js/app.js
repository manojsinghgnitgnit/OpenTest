    var app = angular.module('OpenTest', []);
    app.controller('ItemAddCtrl', function ($scope, $http, $filter) {  
    $scope.prices = [];
	$scope.output = [];
	$scope.ItemName = "book";
    $scope.ItemType  = "Imported";
    $scope.InsertPrice = function () {       
        var IsValid = true;
        $(".validation").removeClass("errorvalidation");         
        if ($("#textinput-price").val() == '') {
            $("#textinput-price").addClass("errorvalidation");
            IsValid = false;
        }
        if (IsValid == false) {
            return;
        }
        else {
            $(".validation").removeClass("errorvalidation");
            $("#textinput-item").val('');
            $("#textinput-price").val('');
        }
        $scope.prices.push({           
            ItemName: $scope.ItemName,
            ItemType: $scope.ItemType,
            Price: $scope.Price           
        });  
		
    }
 
 
    
    $scope.ItemSave = function () {
        console.log($scope.prices);
		var salesTax=0;
		var totalPrice=0;
		var importTax=0;
		var tax=0;
		  angular.forEach($scope.prices, function (value, key) {
		    importTax=0;	
			salesTax=0;	  
            if ($scope.prices[key].ItemName=="music" || $scope.prices[key].ItemName=="perfume")
			{
			  salesTax =   ((parseFloat($scope.prices[key].Price) *10)/100);
			  console.log("sales"+ key);
			}
			 if ($scope.prices[key].ItemType=="Imported")
			 {
			  importTax =  ((parseFloat($scope.prices[key].Price) *5)/100);
			  console.log("import"+ key);
			 }
			$scope.output.push({           
				ItemName: $scope.prices[key].ItemName,
				ItemType: $scope.prices[key].ItemType,
				Price: (parseFloat($scope.prices[key].Price) +  parseFloat(importTax) + parseFloat(salesTax)).toFixed(2)         
			});  			
            tax= tax+ salesTax +  importTax;
			totalPrice = totalPrice + (parseFloat($scope.prices[key].Price) +  parseFloat(importTax) + parseFloat(salesTax));    
        });
		$scope.output.tax = tax.toFixed(2);
		$scope.output.total= totalPrice.toFixed(2);
		 
    }
	 

});
 